class Apple:
...     def __init__(self, color, flavor):
...         self.color = color
...         self.flavor = flavor
...     def __str__(self):
...         return "This apple is {} and its flavor is {}".format(self.color, self.flavor)
...
>>> help(Apple)
Help on class Apple in module __main__:

class Apple(builtins.object)
 |  Methods defined here:
 |
 |  __init__(self, color, flavor)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |
 |  __str__(self)
 |      Return str(self).

 def to_seconds(hours, minutes, seconds):
      """Returns the amount of seconds in the given hours, minutes and seconds."""
      return hours*3600+minutes*60+seconds
help(to_seconds)

# Class inheritance- A class inheriting attribute and methods from another class/.
class Clothing:
  material = ""
  def __init__(self,name):
    self.name = name
  def checkmaterial(self):
	  print("This {} is made of {}".format(self.name,self.material))

class Shirt(Clothing):
  material="Cotton"

polo = Shirt("Polo")
polo.checkmaterial()

Inheritance allows us to define attributes or methods that are shared by all types of fruit without
having to define them in each fruit class individually. We can then also define specific attributes or
methods that are only relevant for a specific type of fruit. Let's look at another example, this time with animals:


class Animal:
...     sound = ""
...     def __init__(self, name):
...         self.name = name
...     def speak(self):
...         print("{sound} I'm {name}! {sound}".format(
...             name=self.name, sound=self.sound))
...
>>> class Piglet(Animal):
...     sound = "Oink!"
...
>>> class Cow(Animal):
...     sound = "Moooo"

import datetime
>>> now = datetime.datetime.now()
>>> type(now)
<class 'datetime.datetime'>
>>> print(now)
2019-04-24 16:54:55.155199


teams = ["wolves","Pandas", "Dragon", "Unicorn"]
for home_teams in teams:
    for away_teams in teams:
        print ( home_teams + " vs " + away_teams)

def even_numbers(maximum):
	return_string = ""
	for x in range (maximum + 1):
		if x > 0 and x % 2 == 0:
		   return_string += str(x) + " "
	return return_string.strip()

print(even_numbers(6))  # Should be 2 4 6

print ("God is goog all the time! \n\t\t It is good to serve the Lord.\n\t Him alone is worthy of pur praise! Halleluyah!")

import sys
print(sys.version)

import datetime
now = datetime.datetime.now()
print ("Current date and time : ")
print(now)
print (now.strftime("%Y-%m-%d %H:%M:%S"))

from math import pi
r = float(input ("Input the radius of the circle : "))
print ("The area of the circle with radius " + str(r) + " is: " + str(pi * r**2))
